# Generated by Django 5.0.2 on 2025-02-08 15:34

import functools
import utilities.generator
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("reviews", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="Certificate",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(blank=True, max_length=200)),
                ("organization", models.TextField()),
                ("url", models.URLField()),
                ("date_issued", models.DateField()),
                ("file_url", models.URLField(blank=True, null=True)),
                ("published", models.BooleanField(default=False)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "public_id",
                    models.CharField(
                        db_index=True,
                        default=functools.partial(
                            utilities.generator.default_pid_generator,
                            *("Certificate",),
                            **{},
                        ),
                        max_length=50,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Education",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("degree", models.CharField(max_length=200)),
                ("institution", models.CharField(max_length=200)),
                ("location", models.CharField(max_length=200)),
                ("start_date", models.DateField()),
                ("end_date", models.DateField()),
                ("published", models.BooleanField(default=False)),
                ("achievements", models.TextField(max_length=500)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "public_id",
                    models.CharField(
                        db_index=True,
                        default=functools.partial(
                            utilities.generator.default_pid_generator,
                            *("Education",),
                            **{},
                        ),
                        max_length=50,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Portfolio",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=200)),
                ("description", models.TextField()),
                ("url", models.URLField()),
                ("image", models.CharField(max_length=2000)),
                ("published", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "public_id",
                    models.CharField(
                        db_index=True,
                        default=functools.partial(
                            utilities.generator.default_pid_generator,
                            *("Portfolio",),
                            **{},
                        ),
                        max_length=50,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Talent",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=utilities.generator.primary_key_generator,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "public_id",
                    models.CharField(
                        db_index=True,
                        default=functools.partial(
                            utilities.generator.default_pid_generator,
                            *("Talent",),
                            **{},
                        ),
                        max_length=50,
                    ),
                ),
                ("title", models.CharField(blank=True, default="", max_length=1500)),
                ("bio", models.TextField(blank=True, default="", max_length=1500)),
                ("skills", models.CharField(blank=True, default="", max_length=1000)),
                ("pricing", models.CharField(blank=True, default="100", max_length=20)),
                ("jobs_completed", models.IntegerField(default=0)),
                ("badge", models.CharField(default="basic", max_length=200)),
                ("bits", models.IntegerField(blank=True, default=60)),
                (
                    "certificates",
                    models.ManyToManyField(
                        blank=True, related_name="talent", to="talents.certificate"
                    ),
                ),
                (
                    "education",
                    models.ManyToManyField(
                        blank=True, related_name="talent", to="talents.education"
                    ),
                ),
                (
                    "portfolio",
                    models.ManyToManyField(
                        blank=True, related_name="talent", to="talents.portfolio"
                    ),
                ),
                (
                    "reviews",
                    models.ManyToManyField(
                        blank=True, related_name="talent_reviews", to="reviews.review"
                    ),
                ),
            ],
        ),
    ]
